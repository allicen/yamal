buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:7.0.0"
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
//        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
//        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
        classpath "org.grails.plugins:views-gradle:1.1.6"
    }
}


version "0.1"
group "pikit"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
//apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.moowork.node"
//apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
//    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.7', ext: 'pom'
//
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile 'org.grails.plugins:spring-security-core:4.0.1' //
    compile "org.grails.plugins:spring-security-rest:2.0.0.M2" //
    compile "org.springframework.boot:spring-boot-starter-logging" //
    compile "org.springframework.boot:spring-boot-autoconfigure" //
    compile "org.grails:grails-core" //
    compile "org.springframework.boot:spring-boot-starter-actuator" //
    compile "org.springframework.boot:spring-boot-starter-tomcat" //
    compile "org.grails:grails-web-boot" //
    compile "org.grails:grails-logging" //
    compile "org.grails:grails-plugin-rest" //
    compile "org.grails:grails-plugin-codecs" //
    compile "org.grails:grails-plugin-databinding" //
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services" //
    compile "org.grails:grails-plugin-datasource" //
    compile "org.grails:grails-plugin-url-mappings" //
    compile "org.grails:grails-plugin-interceptors" //
    compile "org.grails.plugins:cache" //
    compile "org.grails.plugins:async" //
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5" //
    compile "org.hibernate:hibernate-core:5.4.0.Final" //
    compile "org.grails.plugins:gsp"
    compile "org.grails.plugins:views-json" //
    compile 'org.grails.plugins:views-json-templates:1.2.10' //
//    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console" //
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03" //
    runtime "com.h2database:h2" //
//    runtime "org.apache.tomcat:tomcat-jdbc" //
    runtime 'mysql:mysql-connector-java:8.0.17'
    runtime "javax.xml.bind:jaxb-api:2.3.0"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "org.grails:grails-gorm-testing-support" //
//    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support" //
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client:6.1.12.BUILD-SNAPSHOT" //
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
//    sourceResources sourceSets.main
//    String springProfilesActive = 'spring.profiles.active'
//    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
//    addResources = true
}

//webdriverBinaries {
//    chromedriver '2.45.0'
//    geckodriver '0.24.0'
//}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


//assets {
//    minifyJs = true
//    minifyCss = true
//}
